// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?   @db.Text
  email         String?   @unique
  emailVerified DateTime?
  password      String?   @db.Text
  image         String?   @db.Text

  Blog    Blog[]
  Account Account[]
  Comment Comment[]

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String  @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Blog {
  id          String  @id @default(uuid())
  title       String  @db.Text
  description String? @db.Text
  imageUrl    String? @db.Text
  like        Int?

  isPublished Boolean @default(false)

  isPrivate Boolean @default(false)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  Comment Comment[]

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Comment {
  id      String @id @default(uuid())
  comment String @db.Text

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  blogId String
  blog   Blog   @relation(fields: [blogId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}
